2021-07-10 20:47:08,226:INFO:Initializing load_model()
2021-07-10 20:47:08,229:INFO:load_model(model_name=deployment_28042020, platform=None, authentication=None, verbose=True)
2021-07-10 20:54:00,532:INFO:Initializing load_model()
2021-07-10 20:54:00,533:INFO:load_model(model_name=deployment_28042020, platform=None, authentication=None, verbose=True)
2021-07-11 23:23:03,908:INFO:Initializing load_model()
2021-07-11 23:23:03,909:INFO:load_model(model_name=trained, platform=None, authentication=None, verbose=True)
2021-07-11 23:23:39,983:INFO:Initializing load_model()
2021-07-11 23:23:39,987:INFO:load_model(model_name=deployment_28042020, platform=None, authentication=None, verbose=True)
2021-07-11 23:24:14,817:INFO:Initializing load_model()
2021-07-11 23:24:14,820:INFO:load_model(model_name=deployment_28042020, platform=None, authentication=None, verbose=True)
2021-07-11 23:30:55,283:INFO:PyCaret Supervised Module
2021-07-11 23:30:55,284:INFO:ML Usecase: regression
2021-07-11 23:30:55,285:INFO:version 2.3.2
2021-07-11 23:30:55,285:INFO:Initializing setup()
2021-07-11 23:30:55,286:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features={'ExterQual': ['Fa', 'TA', 'Gd', 'Ex'], 'ExterCond': ['Po', 'Fa', 'TA', 'Gd', 'Ex'], 'BsmtQual': ['Fa', 'TA', 'Gd', 'Ex'], 'BsmtCond': ['Po', 'Fa', 'TA', 'Gd'], 'BsmtExposure': ['No', 'Mn', 'Av', 'Gd'], 'HeatingQC': ['Po', 'Fa', 'TA', 'Gd', 'Ex'], 'KitchenQual': ['Fa', 'TA', 'Gd', 'Ex'], 'FireplaceQu': ['Po', 'Fa', 'TA', 'Gd', 'Ex'], 'GarageQual': ['Po', 'Fa', 'TA', 'Gd', 'Ex'], 'GarageCond': ['Po', 'Fa', 'TA', 'Gd', 'Ex'], 'PoolQC': ['Fa', 'Gd', 'Ex']}, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['OverallQual', 'OverallCond', 'BsmtFullBath', 'BsmtHalfBath', 'FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces', 'GarageCars', 'PoolArea'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=True, outliers_threshold=0.01, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-07-11 23:30:55,287:INFO:Checking environment
2021-07-11 23:30:55,289:INFO:python_version: 3.8.10
2021-07-11 23:30:55,290:INFO:python_build: ('default', 'May 11 2021 06:25:23')
2021-07-11 23:30:55,291:INFO:machine: AMD64
2021-07-11 23:30:55,328:INFO:platform: Windows-10-10.0.19042-SP0
2021-07-11 23:30:55,330:INFO:Memory: svmem(total=8389902336, available=1577062400, percent=81.2, used=6812839936, free=1577062400)
2021-07-11 23:30:55,331:INFO:Physical Core: 4
2021-07-11 23:30:55,332:INFO:Logical Core: 8
2021-07-11 23:30:55,333:INFO:Checking libraries
2021-07-11 23:30:55,334:INFO:pd==1.3.0
2021-07-11 23:30:55,336:INFO:numpy==1.19.5
2021-07-11 23:30:55,337:INFO:sklearn==0.23.2
2021-07-11 23:30:55,338:INFO:lightgbm==3.2.1
2021-07-11 23:30:55,890:INFO:catboost==0.26
2021-07-11 23:30:56,444:INFO:xgboost==1.4.2
2021-07-11 23:30:57,733:INFO:mlflow==1.18.0
2021-07-11 23:30:57,735:INFO:Checking Exceptions
2021-07-11 23:30:57,748:INFO:Declaring global variables
2021-07-11 23:30:57,749:INFO:USI: 57c1
2021-07-11 23:30:57,750:INFO:pycaret_globals: {'_gpu_n_jobs_param', 'master_model_container', 'X', 'fold_generator', '_ml_usecase', 'transform_target_method_param', 'fold_param', 'imputation_regressor', 'fix_imbalance_param', 'fold_groups_param', 'create_model_container', 'fold_groups_param_full', '_all_models_internal', 'X_train', 'transform_target_param', 'fold_shuffle_param', 'target_param', '_all_metrics', 'imputation_classifier', '_internal_pipeline', '_all_models', 'exp_name_log', 'y_train', '_available_plots', 'log_plots_param', 'y_test', 'html_param', 'USI', 'iterative_imputation_iters_param', 'experiment__', 'data_before_preprocess', 'stratify_param', 'logging_param', 'n_jobs_param', 'display_container', 'gpu_param', 'fix_imbalance_method_param', 'X_test', 'prep_pipe', 'seed', 'pycaret_globals', 'y'}
2021-07-11 23:30:57,751:INFO:Preparing display monitor
2021-07-11 23:30:57,752:INFO:Preparing display monitor
2021-07-11 23:30:57,774:INFO:Importing libraries
2021-07-11 23:30:57,775:INFO:Copying data for preprocessing
2021-07-11 23:30:57,785:INFO:Declaring preprocessing parameters
2021-07-11 23:30:57,792:INFO:Creating preprocessing pipeline
2021-07-11 23:30:57,832:INFO:Preprocessing pipeline created successfully
2021-07-11 23:30:57,839:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-07-11 23:30:57,841:INFO:Creating global containers
2021-07-11 23:30:57,844:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-07-11 23:31:00,690:INFO:Creating grid variables
2021-07-11 23:31:00,710:INFO:create_model_container: 0
2021-07-11 23:31:00,711:INFO:master_model_container: 0
2021-07-11 23:31:00,712:INFO:display_container: 1
2021-07-11 23:31:00,726:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=['OverallQual',
                                                          'OverallCond',
                                                          'BsmtFullBath',
                                                          'BsmtHalfBath',
                                                          'FullBath',
                                                          'HalfBath',
                                                          'BedroomAbvGr',
                                                          'KitchenAbvGr',
                                                          'TotRmsAbvGrd',
                                                          'Fireplaces',
                                                          'GarageCars',
                                                          'PoolArea'],
                                      tar...
                 Outlier(contamination=0.01, methods=['pca'], random_state=123,
                         target='SalePrice')),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-07-11 23:31:00,727:INFO:setup() succesfully completed......................................
2021-07-11 23:31:00,812:INFO:Initializing compare_models()
2021-07-11 23:31:00,813:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-07-11 23:31:00,815:INFO:Checking exceptions
2021-07-11 23:31:00,816:INFO:Preparing display monitor
2021-07-11 23:31:00,817:INFO:Preparing display monitor
2021-07-11 23:31:00,851:INFO:Initializing Linear Regression
2021-07-11 23:31:00,852:INFO:Total runtime is 2.0202000935872396e-05 minutes
2021-07-11 23:31:00,863:INFO:SubProcess create_model() called ==================================
2021-07-11 23:31:00,863:INFO:Initializing create_model()
2021-07-11 23:31:00,864:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:31:00,864:INFO:Checking exceptions
2021-07-11 23:31:00,865:INFO:Importing libraries
2021-07-11 23:31:00,867:INFO:Copying training dataset
2021-07-11 23:31:00,869:INFO:Defining folds
2021-07-11 23:31:00,870:INFO:Declaring metric variables
2021-07-11 23:31:00,879:INFO:Importing untrained model
2021-07-11 23:31:00,888:INFO:Linear Regression Imported succesfully
2021-07-11 23:31:00,906:INFO:Starting cross validation
2021-07-11 23:31:00,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:31:19,221:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2021-07-11 23:31:19,239:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2166, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3115, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\Kegare\anaconda3\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\Kegare\anaconda3\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-07-11 23:31:19,242:INFO:Initializing create_model()
2021-07-11 23:31:19,244:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:31:19,246:INFO:Checking exceptions
2021-07-11 23:31:19,247:INFO:Importing libraries
2021-07-11 23:31:19,249:INFO:Copying training dataset
2021-07-11 23:31:19,252:INFO:Defining folds
2021-07-11 23:31:19,253:INFO:Declaring metric variables
2021-07-11 23:31:19,269:INFO:Importing untrained model
2021-07-11 23:31:19,286:INFO:Linear Regression Imported succesfully
2021-07-11 23:31:19,316:INFO:Starting cross validation
2021-07-11 23:31:19,318:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:31:30,591:ERROR:create_model() for lr raised an exception:
2021-07-11 23:31:30,593:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2186, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3115, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\Kegare\anaconda3\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\Kegare\anaconda3\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-07-11 23:31:30,594:INFO:Initializing Lasso Regression
2021-07-11 23:31:30,595:INFO:Total runtime is 0.49573265711466474 minutes
2021-07-11 23:31:30,609:INFO:SubProcess create_model() called ==================================
2021-07-11 23:31:30,611:INFO:Initializing create_model()
2021-07-11 23:31:30,612:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:31:30,613:INFO:Checking exceptions
2021-07-11 23:31:30,615:INFO:Importing libraries
2021-07-11 23:31:30,617:INFO:Copying training dataset
2021-07-11 23:31:30,620:INFO:Defining folds
2021-07-11 23:31:30,622:INFO:Declaring metric variables
2021-07-11 23:31:30,634:INFO:Importing untrained model
2021-07-11 23:31:30,645:INFO:Lasso Regression Imported succesfully
2021-07-11 23:31:30,666:INFO:Starting cross validation
2021-07-11 23:31:30,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:31:48,904:INFO:Calculating mean and std
2021-07-11 23:31:48,914:INFO:Creating metrics dataframe
2021-07-11 23:31:48,925:INFO:Uploading results into container
2021-07-11 23:31:48,942:INFO:Uploading model into container now
2021-07-11 23:31:48,942:INFO:create_model_container: 1
2021-07-11 23:31:48,942:INFO:master_model_container: 1
2021-07-11 23:31:48,942:INFO:display_container: 2
2021-07-11 23:31:48,959:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=123,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-07-11 23:31:48,959:INFO:create_model() succesfully completed......................................
2021-07-11 23:31:49,113:INFO:SubProcess create_model() end ==================================
2021-07-11 23:31:49,113:INFO:Creating metrics dataframe
2021-07-11 23:31:49,161:INFO:Initializing Ridge Regression
2021-07-11 23:31:49,161:INFO:Total runtime is 0.8051656723022461 minutes
2021-07-11 23:31:49,184:INFO:SubProcess create_model() called ==================================
2021-07-11 23:31:49,184:INFO:Initializing create_model()
2021-07-11 23:31:49,184:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:31:49,184:INFO:Checking exceptions
2021-07-11 23:31:49,201:INFO:Importing libraries
2021-07-11 23:31:49,202:INFO:Copying training dataset
2021-07-11 23:31:49,202:INFO:Defining folds
2021-07-11 23:31:49,212:INFO:Declaring metric variables
2021-07-11 23:31:49,228:INFO:Importing untrained model
2021-07-11 23:31:49,244:INFO:Ridge Regression Imported succesfully
2021-07-11 23:31:49,309:INFO:Starting cross validation
2021-07-11 23:31:49,309:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:31:49,744:INFO:Calculating mean and std
2021-07-11 23:31:49,744:INFO:Creating metrics dataframe
2021-07-11 23:31:49,760:INFO:Uploading results into container
2021-07-11 23:31:49,760:INFO:Uploading model into container now
2021-07-11 23:31:49,760:INFO:create_model_container: 2
2021-07-11 23:31:49,775:INFO:master_model_container: 2
2021-07-11 23:31:49,775:INFO:display_container: 2
2021-07-11 23:31:49,775:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-07-11 23:31:49,791:INFO:create_model() succesfully completed......................................
2021-07-11 23:31:49,903:INFO:SubProcess create_model() end ==================================
2021-07-11 23:31:49,918:INFO:Creating metrics dataframe
2021-07-11 23:31:49,972:INFO:Initializing Elastic Net
2021-07-11 23:31:49,973:INFO:Total runtime is 0.818705685933431 minutes
2021-07-11 23:31:49,989:INFO:SubProcess create_model() called ==================================
2021-07-11 23:31:49,989:INFO:Initializing create_model()
2021-07-11 23:31:49,989:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:31:50,007:INFO:Checking exceptions
2021-07-11 23:31:50,008:INFO:Importing libraries
2021-07-11 23:31:50,008:INFO:Copying training dataset
2021-07-11 23:31:50,008:INFO:Defining folds
2021-07-11 23:31:50,008:INFO:Declaring metric variables
2021-07-11 23:31:50,039:INFO:Importing untrained model
2021-07-11 23:31:50,066:INFO:Elastic Net Imported succesfully
2021-07-11 23:31:50,100:INFO:Starting cross validation
2021-07-11 23:31:50,116:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:31:50,494:INFO:Calculating mean and std
2021-07-11 23:31:50,502:INFO:Creating metrics dataframe
2021-07-11 23:31:50,518:INFO:Uploading results into container
2021-07-11 23:31:50,527:INFO:Uploading model into container now
2021-07-11 23:31:50,528:INFO:create_model_container: 3
2021-07-11 23:31:50,536:INFO:master_model_container: 3
2021-07-11 23:31:50,536:INFO:display_container: 2
2021-07-11 23:31:50,549:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=123,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-07-11 23:31:50,551:INFO:create_model() succesfully completed......................................
2021-07-11 23:31:50,684:INFO:SubProcess create_model() end ==================================
2021-07-11 23:31:50,700:INFO:Creating metrics dataframe
2021-07-11 23:31:50,738:INFO:Initializing Least Angle Regression
2021-07-11 23:31:50,749:INFO:Total runtime is 0.8316373387972513 minutes
2021-07-11 23:31:50,767:INFO:SubProcess create_model() called ==================================
2021-07-11 23:31:50,767:INFO:Initializing create_model()
2021-07-11 23:31:50,767:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:31:50,767:INFO:Checking exceptions
2021-07-11 23:31:50,783:INFO:Importing libraries
2021-07-11 23:31:50,783:INFO:Copying training dataset
2021-07-11 23:31:50,783:INFO:Defining folds
2021-07-11 23:31:50,783:INFO:Declaring metric variables
2021-07-11 23:31:50,817:INFO:Importing untrained model
2021-07-11 23:31:50,833:INFO:Least Angle Regression Imported succesfully
2021-07-11 23:31:50,883:INFO:Starting cross validation
2021-07-11 23:31:50,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:31:52,259:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-07-11 23:31:52,263:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2166, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3115, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\Kegare\anaconda3\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\Kegare\anaconda3\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-07-11 23:31:52,265:INFO:Initializing create_model()
2021-07-11 23:31:52,267:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:31:52,270:INFO:Checking exceptions
2021-07-11 23:31:52,272:INFO:Importing libraries
2021-07-11 23:31:52,273:INFO:Copying training dataset
2021-07-11 23:31:52,277:INFO:Defining folds
2021-07-11 23:31:52,279:INFO:Declaring metric variables
2021-07-11 23:31:52,296:INFO:Importing untrained model
2021-07-11 23:31:52,315:INFO:Least Angle Regression Imported succesfully
2021-07-11 23:31:52,343:INFO:Starting cross validation
2021-07-11 23:31:52,345:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:02,827:ERROR:create_model() for lar raised an exception:
2021-07-11 23:32:02,830:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2186, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3115, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\Kegare\anaconda3\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "C:\Users\Kegare\anaconda3\lib\concurrent\futures\_base.py", line 444, in result
    return self.__get_result()
  File "C:\Users\Kegare\anaconda3\lib\concurrent\futures\_base.py", line 389, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-07-11 23:32:02,831:INFO:Initializing Lasso Least Angle Regression
2021-07-11 23:32:02,832:INFO:Total runtime is 1.033016832669576 minutes
2021-07-11 23:32:02,844:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:02,846:INFO:Initializing create_model()
2021-07-11 23:32:02,847:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:02,848:INFO:Checking exceptions
2021-07-11 23:32:02,850:INFO:Importing libraries
2021-07-11 23:32:02,850:INFO:Copying training dataset
2021-07-11 23:32:02,853:INFO:Defining folds
2021-07-11 23:32:02,854:INFO:Declaring metric variables
2021-07-11 23:32:02,866:INFO:Importing untrained model
2021-07-11 23:32:02,877:INFO:Lasso Least Angle Regression Imported succesfully
2021-07-11 23:32:02,898:INFO:Starting cross validation
2021-07-11 23:32:02,900:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:18,171:INFO:Calculating mean and std
2021-07-11 23:32:18,179:INFO:Creating metrics dataframe
2021-07-11 23:32:18,206:INFO:Uploading results into container
2021-07-11 23:32:18,210:INFO:Uploading model into container now
2021-07-11 23:32:18,214:INFO:create_model_container: 4
2021-07-11 23:32:18,214:INFO:master_model_container: 4
2021-07-11 23:32:18,227:INFO:display_container: 2
2021-07-11 23:32:18,237:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2021-07-11 23:32:18,242:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:18,447:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:18,452:INFO:Creating metrics dataframe
2021-07-11 23:32:18,529:INFO:Initializing Orthogonal Matching Pursuit
2021-07-11 23:32:18,529:INFO:Total runtime is 1.294634715716044 minutes
2021-07-11 23:32:18,585:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:18,587:INFO:Initializing create_model()
2021-07-11 23:32:18,593:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:18,597:INFO:Checking exceptions
2021-07-11 23:32:18,605:INFO:Importing libraries
2021-07-11 23:32:18,609:INFO:Copying training dataset
2021-07-11 23:32:18,618:INFO:Defining folds
2021-07-11 23:32:18,623:INFO:Declaring metric variables
2021-07-11 23:32:18,662:INFO:Importing untrained model
2021-07-11 23:32:18,695:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-07-11 23:32:18,757:INFO:Starting cross validation
2021-07-11 23:32:18,762:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:19,219:INFO:Calculating mean and std
2021-07-11 23:32:19,227:INFO:Creating metrics dataframe
2021-07-11 23:32:19,246:INFO:Uploading results into container
2021-07-11 23:32:19,253:INFO:Uploading model into container now
2021-07-11 23:32:19,262:INFO:create_model_container: 5
2021-07-11 23:32:19,266:INFO:master_model_container: 5
2021-07-11 23:32:19,270:INFO:display_container: 2
2021-07-11 23:32:19,281:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-07-11 23:32:19,285:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:19,502:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:19,507:INFO:Creating metrics dataframe
2021-07-11 23:32:19,591:INFO:Initializing Bayesian Ridge
2021-07-11 23:32:19,595:INFO:Total runtime is 1.312397030989329 minutes
2021-07-11 23:32:19,641:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:19,644:INFO:Initializing create_model()
2021-07-11 23:32:19,652:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:19,653:INFO:Checking exceptions
2021-07-11 23:32:19,660:INFO:Importing libraries
2021-07-11 23:32:19,666:INFO:Copying training dataset
2021-07-11 23:32:19,678:INFO:Defining folds
2021-07-11 23:32:19,684:INFO:Declaring metric variables
2021-07-11 23:32:19,726:INFO:Importing untrained model
2021-07-11 23:32:19,746:INFO:Bayesian Ridge Imported succesfully
2021-07-11 23:32:19,781:INFO:Starting cross validation
2021-07-11 23:32:19,783:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:20,805:INFO:Calculating mean and std
2021-07-11 23:32:20,811:INFO:Creating metrics dataframe
2021-07-11 23:32:20,830:INFO:Uploading results into container
2021-07-11 23:32:20,838:INFO:Uploading model into container now
2021-07-11 23:32:20,840:INFO:create_model_container: 6
2021-07-11 23:32:20,843:INFO:master_model_container: 6
2021-07-11 23:32:20,849:INFO:display_container: 2
2021-07-11 23:32:20,855:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-07-11 23:32:20,859:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:21,013:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:21,014:INFO:Creating metrics dataframe
2021-07-11 23:32:21,055:INFO:Initializing Passive Aggressive Regressor
2021-07-11 23:32:21,057:INFO:Total runtime is 1.3367678920427957 minutes
2021-07-11 23:32:21,077:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:21,079:INFO:Initializing create_model()
2021-07-11 23:32:21,080:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:21,082:INFO:Checking exceptions
2021-07-11 23:32:21,083:INFO:Importing libraries
2021-07-11 23:32:21,084:INFO:Copying training dataset
2021-07-11 23:32:21,090:INFO:Defining folds
2021-07-11 23:32:21,092:INFO:Declaring metric variables
2021-07-11 23:32:21,115:INFO:Importing untrained model
2021-07-11 23:32:21,135:INFO:Passive Aggressive Regressor Imported succesfully
2021-07-11 23:32:21,173:INFO:Starting cross validation
2021-07-11 23:32:21,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:21,572:INFO:Calculating mean and std
2021-07-11 23:32:21,579:INFO:Creating metrics dataframe
2021-07-11 23:32:21,595:INFO:Uploading results into container
2021-07-11 23:32:21,598:INFO:Uploading model into container now
2021-07-11 23:32:21,600:INFO:create_model_container: 7
2021-07-11 23:32:21,603:INFO:master_model_container: 7
2021-07-11 23:32:21,605:INFO:display_container: 2
2021-07-11 23:32:21,613:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-07-11 23:32:21,616:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:21,812:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:21,815:INFO:Creating metrics dataframe
2021-07-11 23:32:21,859:INFO:Initializing Huber Regressor
2021-07-11 23:32:21,861:INFO:Total runtime is 1.3501455982526143 minutes
2021-07-11 23:32:21,879:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:21,882:INFO:Initializing create_model()
2021-07-11 23:32:21,883:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:21,884:INFO:Checking exceptions
2021-07-11 23:32:21,886:INFO:Importing libraries
2021-07-11 23:32:21,888:INFO:Copying training dataset
2021-07-11 23:32:21,893:INFO:Defining folds
2021-07-11 23:32:21,895:INFO:Declaring metric variables
2021-07-11 23:32:21,913:INFO:Importing untrained model
2021-07-11 23:32:21,932:INFO:Huber Regressor Imported succesfully
2021-07-11 23:32:21,970:INFO:Starting cross validation
2021-07-11 23:32:21,971:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:25,006:INFO:Calculating mean and std
2021-07-11 23:32:25,014:INFO:Creating metrics dataframe
2021-07-11 23:32:25,029:INFO:Uploading results into container
2021-07-11 23:32:25,033:INFO:Uploading model into container now
2021-07-11 23:32:25,035:INFO:create_model_container: 8
2021-07-11 23:32:25,037:INFO:master_model_container: 8
2021-07-11 23:32:25,043:INFO:display_container: 2
2021-07-11 23:32:25,048:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-07-11 23:32:25,051:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:25,217:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:25,219:INFO:Creating metrics dataframe
2021-07-11 23:32:25,252:INFO:Initializing K Neighbors Regressor
2021-07-11 23:32:25,254:INFO:Total runtime is 1.4067095279693602 minutes
2021-07-11 23:32:25,270:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:25,271:INFO:Initializing create_model()
2021-07-11 23:32:25,272:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:25,274:INFO:Checking exceptions
2021-07-11 23:32:25,276:INFO:Importing libraries
2021-07-11 23:32:25,278:INFO:Copying training dataset
2021-07-11 23:32:25,281:INFO:Defining folds
2021-07-11 23:32:25,282:INFO:Declaring metric variables
2021-07-11 23:32:25,300:INFO:Importing untrained model
2021-07-11 23:32:25,315:INFO:K Neighbors Regressor Imported succesfully
2021-07-11 23:32:25,345:INFO:Starting cross validation
2021-07-11 23:32:25,347:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:26,003:INFO:Calculating mean and std
2021-07-11 23:32:26,006:INFO:Creating metrics dataframe
2021-07-11 23:32:26,015:INFO:Uploading results into container
2021-07-11 23:32:26,016:INFO:Uploading model into container now
2021-07-11 23:32:26,018:INFO:create_model_container: 9
2021-07-11 23:32:26,019:INFO:master_model_container: 9
2021-07-11 23:32:26,021:INFO:display_container: 2
2021-07-11 23:32:26,026:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-07-11 23:32:26,027:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:26,163:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:26,165:INFO:Creating metrics dataframe
2021-07-11 23:32:26,212:INFO:Initializing Decision Tree Regressor
2021-07-11 23:32:26,213:INFO:Total runtime is 1.4226928909619647 minutes
2021-07-11 23:32:26,233:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:26,235:INFO:Initializing create_model()
2021-07-11 23:32:26,236:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:26,238:INFO:Checking exceptions
2021-07-11 23:32:26,241:INFO:Importing libraries
2021-07-11 23:32:26,242:INFO:Copying training dataset
2021-07-11 23:32:26,245:INFO:Defining folds
2021-07-11 23:32:26,246:INFO:Declaring metric variables
2021-07-11 23:32:26,260:INFO:Importing untrained model
2021-07-11 23:32:26,273:INFO:Decision Tree Regressor Imported succesfully
2021-07-11 23:32:26,300:INFO:Starting cross validation
2021-07-11 23:32:26,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:26,729:INFO:Calculating mean and std
2021-07-11 23:32:26,734:INFO:Creating metrics dataframe
2021-07-11 23:32:26,749:INFO:Uploading results into container
2021-07-11 23:32:26,754:INFO:Uploading model into container now
2021-07-11 23:32:26,757:INFO:create_model_container: 10
2021-07-11 23:32:26,759:INFO:master_model_container: 10
2021-07-11 23:32:26,761:INFO:display_container: 2
2021-07-11 23:32:26,771:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2021-07-11 23:32:26,774:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:26,901:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:26,902:INFO:Creating metrics dataframe
2021-07-11 23:32:26,938:INFO:Initializing Random Forest Regressor
2021-07-11 23:32:26,939:INFO:Total runtime is 1.43479399283727 minutes
2021-07-11 23:32:26,954:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:26,955:INFO:Initializing create_model()
2021-07-11 23:32:26,957:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:26,957:INFO:Checking exceptions
2021-07-11 23:32:26,958:INFO:Importing libraries
2021-07-11 23:32:26,959:INFO:Copying training dataset
2021-07-11 23:32:26,963:INFO:Defining folds
2021-07-11 23:32:26,964:INFO:Declaring metric variables
2021-07-11 23:32:26,979:INFO:Importing untrained model
2021-07-11 23:32:26,993:INFO:Random Forest Regressor Imported succesfully
2021-07-11 23:32:27,021:INFO:Starting cross validation
2021-07-11 23:32:27,023:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:35,170:INFO:Calculating mean and std
2021-07-11 23:32:35,175:INFO:Creating metrics dataframe
2021-07-11 23:32:35,189:INFO:Uploading results into container
2021-07-11 23:32:35,193:INFO:Uploading model into container now
2021-07-11 23:32:35,198:INFO:create_model_container: 11
2021-07-11 23:32:35,200:INFO:master_model_container: 11
2021-07-11 23:32:35,203:INFO:display_container: 2
2021-07-11 23:32:35,210:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:32:35,215:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:35,341:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:35,347:INFO:Creating metrics dataframe
2021-07-11 23:32:35,373:INFO:Initializing Extra Trees Regressor
2021-07-11 23:32:35,375:INFO:Total runtime is 1.5753988663355507 minutes
2021-07-11 23:32:35,385:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:35,386:INFO:Initializing create_model()
2021-07-11 23:32:35,387:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:35,388:INFO:Checking exceptions
2021-07-11 23:32:35,389:INFO:Importing libraries
2021-07-11 23:32:35,390:INFO:Copying training dataset
2021-07-11 23:32:35,392:INFO:Defining folds
2021-07-11 23:32:35,393:INFO:Declaring metric variables
2021-07-11 23:32:35,401:INFO:Importing untrained model
2021-07-11 23:32:35,411:INFO:Extra Trees Regressor Imported succesfully
2021-07-11 23:32:35,429:INFO:Starting cross validation
2021-07-11 23:32:35,430:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:53,001:INFO:Calculating mean and std
2021-07-11 23:32:53,011:INFO:Creating metrics dataframe
2021-07-11 23:32:53,030:INFO:Uploading results into container
2021-07-11 23:32:53,034:INFO:Uploading model into container now
2021-07-11 23:32:53,037:INFO:create_model_container: 12
2021-07-11 23:32:53,043:INFO:master_model_container: 12
2021-07-11 23:32:53,047:INFO:display_container: 2
2021-07-11 23:32:53,057:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=123,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:32:53,063:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:53,231:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:53,234:INFO:Creating metrics dataframe
2021-07-11 23:32:53,292:INFO:Initializing AdaBoost Regressor
2021-07-11 23:32:53,293:INFO:Total runtime is 1.8740389227867125 minutes
2021-07-11 23:32:53,318:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:53,321:INFO:Initializing create_model()
2021-07-11 23:32:53,322:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:53,323:INFO:Checking exceptions
2021-07-11 23:32:53,324:INFO:Importing libraries
2021-07-11 23:32:53,326:INFO:Copying training dataset
2021-07-11 23:32:53,329:INFO:Defining folds
2021-07-11 23:32:53,330:INFO:Declaring metric variables
2021-07-11 23:32:53,349:INFO:Importing untrained model
2021-07-11 23:32:53,369:INFO:AdaBoost Regressor Imported succesfully
2021-07-11 23:32:53,403:INFO:Starting cross validation
2021-07-11 23:32:53,406:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:32:57,059:INFO:Calculating mean and std
2021-07-11 23:32:57,061:INFO:Creating metrics dataframe
2021-07-11 23:32:57,070:INFO:Uploading results into container
2021-07-11 23:32:57,072:INFO:Uploading model into container now
2021-07-11 23:32:57,073:INFO:create_model_container: 13
2021-07-11 23:32:57,073:INFO:master_model_container: 13
2021-07-11 23:32:57,076:INFO:display_container: 2
2021-07-11 23:32:57,078:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=123))
2021-07-11 23:32:57,079:INFO:create_model() succesfully completed......................................
2021-07-11 23:32:57,222:INFO:SubProcess create_model() end ==================================
2021-07-11 23:32:57,226:INFO:Creating metrics dataframe
2021-07-11 23:32:57,265:INFO:Initializing Gradient Boosting Regressor
2021-07-11 23:32:57,269:INFO:Total runtime is 1.9403035402297972 minutes
2021-07-11 23:32:57,291:INFO:SubProcess create_model() called ==================================
2021-07-11 23:32:57,293:INFO:Initializing create_model()
2021-07-11 23:32:57,294:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:32:57,295:INFO:Checking exceptions
2021-07-11 23:32:57,296:INFO:Importing libraries
2021-07-11 23:32:57,296:INFO:Copying training dataset
2021-07-11 23:32:57,302:INFO:Defining folds
2021-07-11 23:32:57,303:INFO:Declaring metric variables
2021-07-11 23:32:57,317:INFO:Importing untrained model
2021-07-11 23:32:57,330:INFO:Gradient Boosting Regressor Imported succesfully
2021-07-11 23:32:57,356:INFO:Starting cross validation
2021-07-11 23:32:57,357:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:33:04,324:INFO:Calculating mean and std
2021-07-11 23:33:04,332:INFO:Creating metrics dataframe
2021-07-11 23:33:04,349:INFO:Uploading results into container
2021-07-11 23:33:04,358:INFO:Uploading model into container now
2021-07-11 23:33:04,358:INFO:create_model_container: 14
2021-07-11 23:33:04,365:INFO:master_model_container: 14
2021-07-11 23:33:04,365:INFO:display_container: 2
2021-07-11 23:33:04,387:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-07-11 23:33:04,387:INFO:create_model() succesfully completed......................................
2021-07-11 23:33:04,518:INFO:SubProcess create_model() end ==================================
2021-07-11 23:33:04,526:INFO:Creating metrics dataframe
2021-07-11 23:33:04,582:INFO:Initializing Extreme Gradient Boosting
2021-07-11 23:33:04,582:INFO:Total runtime is 2.062178115049998 minutes
2021-07-11 23:33:04,614:INFO:SubProcess create_model() called ==================================
2021-07-11 23:33:04,615:INFO:Initializing create_model()
2021-07-11 23:33:04,615:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:33:04,615:INFO:Checking exceptions
2021-07-11 23:33:04,623:INFO:Importing libraries
2021-07-11 23:33:04,623:INFO:Copying training dataset
2021-07-11 23:33:04,632:INFO:Defining folds
2021-07-11 23:33:04,632:INFO:Declaring metric variables
2021-07-11 23:33:04,656:INFO:Importing untrained model
2021-07-11 23:33:04,686:INFO:Extreme Gradient Boosting Imported succesfully
2021-07-11 23:33:04,731:INFO:Starting cross validation
2021-07-11 23:33:04,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:33:17,762:INFO:Calculating mean and std
2021-07-11 23:33:17,763:INFO:Creating metrics dataframe
2021-07-11 23:33:17,787:INFO:Uploading results into container
2021-07-11 23:33:17,792:INFO:Uploading model into container now
2021-07-11 23:33:17,793:INFO:create_model_container: 15
2021-07-11 23:33:17,797:INFO:master_model_container: 15
2021-07-11 23:33:17,800:INFO:display_container: 2
2021-07-11 23:33:17,822:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=123,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-07-11 23:33:17,822:INFO:create_model() succesfully completed......................................
2021-07-11 23:33:18,009:INFO:SubProcess create_model() end ==================================
2021-07-11 23:33:18,009:INFO:Creating metrics dataframe
2021-07-11 23:33:18,067:INFO:Initializing Light Gradient Boosting Machine
2021-07-11 23:33:18,068:INFO:Total runtime is 2.2869539380073545 minutes
2021-07-11 23:33:18,090:INFO:SubProcess create_model() called ==================================
2021-07-11 23:33:18,100:INFO:Initializing create_model()
2021-07-11 23:33:18,101:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:33:18,101:INFO:Checking exceptions
2021-07-11 23:33:18,101:INFO:Importing libraries
2021-07-11 23:33:18,101:INFO:Copying training dataset
2021-07-11 23:33:18,112:INFO:Defining folds
2021-07-11 23:33:18,117:INFO:Declaring metric variables
2021-07-11 23:33:18,146:INFO:Importing untrained model
2021-07-11 23:33:18,161:INFO:Light Gradient Boosting Machine Imported succesfully
2021-07-11 23:33:18,218:INFO:Starting cross validation
2021-07-11 23:33:18,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:33:24,627:INFO:Calculating mean and std
2021-07-11 23:33:24,628:INFO:Creating metrics dataframe
2021-07-11 23:33:24,644:INFO:Uploading results into container
2021-07-11 23:33:24,644:INFO:Uploading model into container now
2021-07-11 23:33:24,644:INFO:create_model_container: 16
2021-07-11 23:33:24,661:INFO:master_model_container: 16
2021-07-11 23:33:24,661:INFO:display_container: 2
2021-07-11 23:33:24,661:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-07-11 23:33:24,676:INFO:create_model() succesfully completed......................................
2021-07-11 23:33:24,855:INFO:SubProcess create_model() end ==================================
2021-07-11 23:33:24,859:INFO:Creating metrics dataframe
2021-07-11 23:33:24,936:INFO:Initializing CatBoost Regressor
2021-07-11 23:33:24,936:INFO:Total runtime is 2.4014094471931453 minutes
2021-07-11 23:33:24,967:INFO:SubProcess create_model() called ==================================
2021-07-11 23:33:24,970:INFO:Initializing create_model()
2021-07-11 23:33:24,972:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:33:24,974:INFO:Checking exceptions
2021-07-11 23:33:24,978:INFO:Importing libraries
2021-07-11 23:33:24,980:INFO:Copying training dataset
2021-07-11 23:33:24,985:INFO:Defining folds
2021-07-11 23:33:24,988:INFO:Declaring metric variables
2021-07-11 23:33:25,009:INFO:Importing untrained model
2021-07-11 23:33:25,041:INFO:CatBoost Regressor Imported succesfully
2021-07-11 23:33:25,087:INFO:Starting cross validation
2021-07-11 23:33:25,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:34:11,215:INFO:Calculating mean and std
2021-07-11 23:34:11,218:INFO:Creating metrics dataframe
2021-07-11 23:34:11,229:INFO:Uploading results into container
2021-07-11 23:34:11,232:INFO:Uploading model into container now
2021-07-11 23:34:11,235:INFO:create_model_container: 17
2021-07-11 23:34:11,236:INFO:master_model_container: 17
2021-07-11 23:34:11,237:INFO:display_container: 2
2021-07-11 23:34:11,239:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD7FD67C0>,
                                task_type='CPU', verbose=False)
2021-07-11 23:34:11,241:INFO:create_model() succesfully completed......................................
2021-07-11 23:34:11,379:WARNING:create_model() for PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD7FD67C0>,
                                task_type='CPU', verbose=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2021-07-11 23:34:11,381:WARNING:Traceback (most recent call last):
  File "C:\Users\Kegare\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2179, in compare_models
    assert np.sum(model_results.iloc[0]) != 0.0
AssertionError

2021-07-11 23:34:11,382:INFO:Initializing create_model()
2021-07-11 23:34:11,383:INFO:create_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD7FD67C0>,
                                task_type='CPU', verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC0030AC0>, kwargs={})
2021-07-11 23:34:11,384:INFO:Checking exceptions
2021-07-11 23:34:11,388:INFO:Importing libraries
2021-07-11 23:34:11,389:INFO:Copying training dataset
2021-07-11 23:34:11,391:INFO:Defining folds
2021-07-11 23:34:11,392:INFO:Declaring metric variables
2021-07-11 23:34:11,402:INFO:Importing untrained model
2021-07-11 23:34:11,404:INFO:Declaring custom model
2021-07-11 23:34:11,416:INFO:CatBoost Regressor Imported succesfully
2021-07-11 23:34:11,435:INFO:Starting cross validation
2021-07-11 23:34:11,436:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:35:21,445:INFO:Calculating mean and std
2021-07-11 23:35:21,449:INFO:Creating metrics dataframe
2021-07-11 23:35:21,463:INFO:Uploading results into container
2021-07-11 23:35:21,466:INFO:Uploading model into container now
2021-07-11 23:35:21,467:INFO:create_model_container: 18
2021-07-11 23:35:21,468:INFO:master_model_container: 18
2021-07-11 23:35:21,471:INFO:display_container: 2
2021-07-11 23:35:21,474:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD7FC49D0>,
                                task_type='CPU', verbose=False)
2021-07-11 23:35:21,476:INFO:create_model() succesfully completed......................................
2021-07-11 23:35:21,621:INFO:SubProcess create_model() end ==================================
2021-07-11 23:35:21,622:INFO:Creating metrics dataframe
2021-07-11 23:35:21,709:INFO:Initializing create_model()
2021-07-11 23:35:21,710:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-07-11 23:35:21,712:INFO:Checking exceptions
2021-07-11 23:35:21,715:INFO:Importing libraries
2021-07-11 23:35:21,716:INFO:Copying training dataset
2021-07-11 23:35:21,719:INFO:Defining folds
2021-07-11 23:35:21,719:INFO:Declaring metric variables
2021-07-11 23:35:21,719:INFO:Importing untrained model
2021-07-11 23:35:21,719:INFO:Declaring custom model
2021-07-11 23:35:21,730:INFO:Huber Regressor Imported succesfully
2021-07-11 23:35:21,734:INFO:Cross validation set to False
2021-07-11 23:35:21,735:INFO:Fitting Model
2021-07-11 23:35:22,575:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-07-11 23:35:22,577:INFO:create_models() succesfully completed......................................
2021-07-11 23:35:22,741:INFO:Initializing create_model()
2021-07-11 23:35:22,743:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-07-11 23:35:22,745:INFO:Checking exceptions
2021-07-11 23:35:22,746:INFO:Importing libraries
2021-07-11 23:35:22,748:INFO:Copying training dataset
2021-07-11 23:35:22,752:INFO:Defining folds
2021-07-11 23:35:22,753:INFO:Declaring metric variables
2021-07-11 23:35:22,758:INFO:Importing untrained model
2021-07-11 23:35:22,758:INFO:Declaring custom model
2021-07-11 23:35:22,764:INFO:Bayesian Ridge Imported succesfully
2021-07-11 23:35:22,766:INFO:Cross validation set to False
2021-07-11 23:35:22,766:INFO:Fitting Model
2021-07-11 23:35:23,451:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-07-11 23:35:23,451:INFO:create_models() succesfully completed......................................
2021-07-11 23:35:23,606:INFO:Initializing create_model()
2021-07-11 23:35:23,614:INFO:create_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD7FC49D0>,
                                task_type='CPU', verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-07-11 23:35:23,614:INFO:Checking exceptions
2021-07-11 23:35:23,620:INFO:Importing libraries
2021-07-11 23:35:23,621:INFO:Copying training dataset
2021-07-11 23:35:23,625:INFO:Defining folds
2021-07-11 23:35:23,631:INFO:Declaring metric variables
2021-07-11 23:35:23,632:INFO:Importing untrained model
2021-07-11 23:35:23,634:INFO:Declaring custom model
2021-07-11 23:35:23,638:INFO:CatBoost Regressor Imported succesfully
2021-07-11 23:35:23,643:INFO:Cross validation set to False
2021-07-11 23:35:23,645:INFO:Fitting Model
2021-07-11 23:35:34,143:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD825E1C0>,
                                task_type='CPU', verbose=False)
2021-07-11 23:35:34,148:INFO:create_models() succesfully completed......................................
2021-07-11 23:35:34,305:INFO:Initializing create_model()
2021-07-11 23:35:34,306:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-07-11 23:35:34,310:INFO:Checking exceptions
2021-07-11 23:35:34,313:INFO:Importing libraries
2021-07-11 23:35:34,315:INFO:Copying training dataset
2021-07-11 23:35:34,315:INFO:Defining folds
2021-07-11 23:35:34,315:INFO:Declaring metric variables
2021-07-11 23:35:34,323:INFO:Importing untrained model
2021-07-11 23:35:34,325:INFO:Declaring custom model
2021-07-11 23:35:34,330:INFO:Ridge Regression Imported succesfully
2021-07-11 23:35:34,334:INFO:Cross validation set to False
2021-07-11 23:35:34,338:INFO:Fitting Model
2021-07-11 23:35:34,382:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-07-11 23:35:34,382:INFO:create_models() succesfully completed......................................
2021-07-11 23:35:34,547:INFO:Initializing create_model()
2021-07-11 23:35:34,547:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-07-11 23:35:34,555:INFO:Checking exceptions
2021-07-11 23:35:34,559:INFO:Importing libraries
2021-07-11 23:35:34,560:INFO:Copying training dataset
2021-07-11 23:35:34,560:INFO:Defining folds
2021-07-11 23:35:34,569:INFO:Declaring metric variables
2021-07-11 23:35:34,570:INFO:Importing untrained model
2021-07-11 23:35:34,570:INFO:Declaring custom model
2021-07-11 23:35:34,580:INFO:Gradient Boosting Regressor Imported succesfully
2021-07-11 23:35:34,580:INFO:Cross validation set to False
2021-07-11 23:35:34,580:INFO:Fitting Model
2021-07-11 23:35:37,077:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-07-11 23:35:37,080:INFO:create_models() succesfully completed......................................
2021-07-11 23:35:37,321:INFO:create_model_container: 18
2021-07-11 23:35:37,323:INFO:master_model_container: 18
2021-07-11 23:35:37,325:INFO:display_container: 2
2021-07-11 23:35:37,337:INFO:[PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD825E1C0>,
                                task_type='CPU', verbose=False), PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)]
2021-07-11 23:35:37,345:INFO:compare_models() succesfully completed......................................
2021-07-11 23:35:37,347:INFO:Initializing tune_model()
2021-07-11 23:35:37,347:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-07-11 23:35:37,355:INFO:Checking exceptions
2021-07-11 23:35:37,358:INFO:Preparing display monitor
2021-07-11 23:35:37,412:INFO:Copying training dataset
2021-07-11 23:35:37,413:INFO:Checking base model
2021-07-11 23:35:37,413:INFO:Base model : Huber Regressor
2021-07-11 23:35:37,462:INFO:Declaring metric variables
2021-07-11 23:35:37,508:INFO:Defining Hyperparameters
2021-07-11 23:35:37,663:INFO:Tuning with n_jobs=-1
2021-07-11 23:35:37,668:INFO:Initializing RandomizedSearchCV
2021-07-11 23:36:06,574:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.1, 'actual_estimator__alpha': 0.01}
2021-07-11 23:36:06,576:INFO:Hyperparameter search completed
2021-07-11 23:36:06,577:INFO:SubProcess create_model() called ==================================
2021-07-11 23:36:06,581:INFO:Initializing create_model()
2021-07-11 23:36:06,582:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD62AA310>, kwargs={'fit_intercept': True, 'epsilon': 1.1, 'alpha': 0.01})
2021-07-11 23:36:06,584:INFO:Checking exceptions
2021-07-11 23:36:06,585:INFO:Importing libraries
2021-07-11 23:36:06,588:INFO:Copying training dataset
2021-07-11 23:36:06,592:INFO:Defining folds
2021-07-11 23:36:06,594:INFO:Declaring metric variables
2021-07-11 23:36:06,623:INFO:Importing untrained model
2021-07-11 23:36:06,624:INFO:Declaring custom model
2021-07-11 23:36:06,662:INFO:Huber Regressor Imported succesfully
2021-07-11 23:36:06,734:INFO:Starting cross validation
2021-07-11 23:36:06,736:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:36:10,007:INFO:Calculating mean and std
2021-07-11 23:36:10,011:INFO:Creating metrics dataframe
2021-07-11 23:36:10,071:INFO:Finalizing model
2021-07-11 23:36:10,829:INFO:Uploading results into container
2021-07-11 23:36:10,831:INFO:Uploading model into container now
2021-07-11 23:36:10,833:INFO:create_model_container: 19
2021-07-11 23:36:10,835:INFO:master_model_container: 19
2021-07-11 23:36:10,835:INFO:display_container: 3
2021-07-11 23:36:10,842:INFO:PowerTransformedTargetRegressor(alpha=0.01, epsilon=1.1, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.01,
                                                         epsilon=1.1,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-07-11 23:36:10,848:INFO:create_model() succesfully completed......................................
2021-07-11 23:36:11,029:INFO:SubProcess create_model() end ==================================
2021-07-11 23:36:11,057:INFO:create_model_container: 19
2021-07-11 23:36:11,058:INFO:master_model_container: 19
2021-07-11 23:36:11,059:INFO:display_container: 3
2021-07-11 23:36:11,062:INFO:PowerTransformedTargetRegressor(alpha=0.01, epsilon=1.1, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.01,
                                                         epsilon=1.1,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-07-11 23:36:11,063:INFO:tune_model() succesfully completed......................................
2021-07-11 23:36:11,198:INFO:Initializing tune_model()
2021-07-11 23:36:11,200:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-07-11 23:36:11,201:INFO:Checking exceptions
2021-07-11 23:36:11,203:INFO:Preparing display monitor
2021-07-11 23:36:11,236:INFO:Copying training dataset
2021-07-11 23:36:11,240:INFO:Checking base model
2021-07-11 23:36:11,242:INFO:Base model : Bayesian Ridge
2021-07-11 23:36:11,270:INFO:Declaring metric variables
2021-07-11 23:36:11,293:INFO:Defining Hyperparameters
2021-07-11 23:36:11,397:INFO:Tuning with n_jobs=-1
2021-07-11 23:36:11,399:INFO:Initializing RandomizedSearchCV
2021-07-11 23:36:19,656:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__lambda_2': 1e-07, 'actual_estimator__lambda_1': 0.01, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 1e-06, 'actual_estimator__alpha_1': 0.3}
2021-07-11 23:36:19,661:INFO:Hyperparameter search completed
2021-07-11 23:36:19,664:INFO:SubProcess create_model() called ==================================
2021-07-11 23:36:19,669:INFO:Initializing create_model()
2021-07-11 23:36:19,669:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD7854DF0>, kwargs={'normalize': False, 'lambda_2': 1e-07, 'lambda_1': 0.01, 'fit_intercept': True, 'compute_score': True, 'alpha_2': 1e-06, 'alpha_1': 0.3})
2021-07-11 23:36:19,669:INFO:Checking exceptions
2021-07-11 23:36:19,679:INFO:Importing libraries
2021-07-11 23:36:19,683:INFO:Copying training dataset
2021-07-11 23:36:19,689:INFO:Defining folds
2021-07-11 23:36:19,692:INFO:Declaring metric variables
2021-07-11 23:36:19,737:INFO:Importing untrained model
2021-07-11 23:36:19,740:INFO:Declaring custom model
2021-07-11 23:36:19,804:INFO:Bayesian Ridge Imported succesfully
2021-07-11 23:36:19,877:INFO:Starting cross validation
2021-07-11 23:36:19,893:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:36:21,105:INFO:Calculating mean and std
2021-07-11 23:36:21,111:INFO:Creating metrics dataframe
2021-07-11 23:36:21,172:INFO:Finalizing model
2021-07-11 23:36:21,740:INFO:Uploading results into container
2021-07-11 23:36:21,741:INFO:Uploading model into container now
2021-07-11 23:36:21,744:INFO:create_model_container: 20
2021-07-11 23:36:21,747:INFO:master_model_container: 20
2021-07-11 23:36:21,750:INFO:display_container: 4
2021-07-11 23:36:21,754:INFO:PowerTransformedTargetRegressor(alpha_1=0.3, alpha_2=1e-06, alpha_init=None,
                                compute_score=True, copy_X=True,
                                fit_intercept=True, lambda_1=0.01,
                                lambda_2=1e-07, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.3,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=True,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.01,
                                                        lambda_2=1e-07,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-07-11 23:36:21,756:INFO:create_model() succesfully completed......................................
2021-07-11 23:36:21,931:INFO:SubProcess create_model() end ==================================
2021-07-11 23:36:22,020:INFO:create_model_container: 20
2021-07-11 23:36:22,031:INFO:master_model_container: 20
2021-07-11 23:36:22,037:INFO:display_container: 4
2021-07-11 23:36:22,054:INFO:PowerTransformedTargetRegressor(alpha_1=0.3, alpha_2=1e-06, alpha_init=None,
                                compute_score=True, copy_X=True,
                                fit_intercept=True, lambda_1=0.01,
                                lambda_2=1e-07, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.3,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=True,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.01,
                                                        lambda_2=1e-07,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-07-11 23:36:22,054:INFO:tune_model() succesfully completed......................................
2021-07-11 23:36:22,373:INFO:Initializing tune_model()
2021-07-11 23:36:22,381:INFO:tune_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD825E1C0>,
                                task_type='CPU', verbose=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-07-11 23:36:22,389:INFO:Checking exceptions
2021-07-11 23:36:22,394:INFO:Preparing display monitor
2021-07-11 23:36:22,594:INFO:Copying training dataset
2021-07-11 23:36:22,612:INFO:Checking base model
2021-07-11 23:36:22,628:INFO:Base model : CatBoost Regressor
2021-07-11 23:36:22,743:INFO:Declaring metric variables
2021-07-11 23:36:22,874:INFO:Defining Hyperparameters
2021-07-11 23:36:23,223:INFO:Tuning with n_jobs=-1
2021-07-11 23:36:23,229:INFO:Initializing RandomizedSearchCV
2021-07-11 23:37:46,134:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2021-07-11 23:37:46,150:INFO:Hyperparameter search completed
2021-07-11 23:37:46,157:INFO:SubProcess create_model() called ==================================
2021-07-11 23:37:46,168:INFO:Initializing create_model()
2021-07-11 23:37:46,175:INFO:create_model(estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD7FD0430>,
                                task_type='CPU', verbose=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD6727160>, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2021-07-11 23:37:46,182:INFO:Checking exceptions
2021-07-11 23:37:46,189:INFO:Importing libraries
2021-07-11 23:37:46,197:INFO:Copying training dataset
2021-07-11 23:37:46,211:INFO:Defining folds
2021-07-11 23:37:46,222:INFO:Declaring metric variables
2021-07-11 23:37:46,365:INFO:Importing untrained model
2021-07-11 23:37:46,373:INFO:Declaring custom model
2021-07-11 23:37:46,504:INFO:CatBoost Regressor Imported succesfully
2021-07-11 23:37:46,834:INFO:Starting cross validation
2021-07-11 23:37:46,841:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:38:25,462:INFO:Calculating mean and std
2021-07-11 23:38:25,467:INFO:Creating metrics dataframe
2021-07-11 23:38:25,509:INFO:Finalizing model
2021-07-11 23:38:32,979:INFO:Uploading results into container
2021-07-11 23:38:32,985:INFO:Uploading model into container now
2021-07-11 23:38:32,989:INFO:create_model_container: 21
2021-07-11 23:38:32,994:INFO:master_model_container: 21
2021-07-11 23:38:33,005:INFO:display_container: 5
2021-07-11 23:38:33,013:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD80E3CA0>,
                                task_type='CPU', verbose=False)
2021-07-11 23:38:33,020:INFO:create_model() succesfully completed......................................
2021-07-11 23:38:33,293:INFO:SubProcess create_model() end ==================================
2021-07-11 23:38:33,392:INFO:create_model_container: 21
2021-07-11 23:38:33,400:INFO:master_model_container: 21
2021-07-11 23:38:33,404:INFO:display_container: 5
2021-07-11 23:38:33,409:INFO:PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD80E3CA0>,
                                task_type='CPU', verbose=False)
2021-07-11 23:38:33,417:INFO:tune_model() succesfully completed......................................
2021-07-11 23:38:33,722:INFO:Initializing tune_model()
2021-07-11 23:38:33,727:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-07-11 23:38:33,732:INFO:Checking exceptions
2021-07-11 23:38:33,739:INFO:Preparing display monitor
2021-07-11 23:38:33,878:INFO:Copying training dataset
2021-07-11 23:38:33,889:INFO:Checking base model
2021-07-11 23:38:33,894:INFO:Base model : Ridge Regression
2021-07-11 23:38:33,988:INFO:Declaring metric variables
2021-07-11 23:38:34,072:INFO:Defining Hyperparameters
2021-07-11 23:38:34,315:INFO:Tuning with n_jobs=-1
2021-07-11 23:38:34,320:INFO:Initializing RandomizedSearchCV
2021-07-11 23:38:37,865:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 7.73}
2021-07-11 23:38:37,869:INFO:Hyperparameter search completed
2021-07-11 23:38:37,876:INFO:SubProcess create_model() called ==================================
2021-07-11 23:38:37,902:INFO:Initializing create_model()
2021-07-11 23:38:37,910:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD8114EB0>, kwargs={'normalize': False, 'fit_intercept': True, 'alpha': 7.73})
2021-07-11 23:38:37,917:INFO:Checking exceptions
2021-07-11 23:38:37,924:INFO:Importing libraries
2021-07-11 23:38:37,928:INFO:Copying training dataset
2021-07-11 23:38:37,938:INFO:Defining folds
2021-07-11 23:38:37,945:INFO:Declaring metric variables
2021-07-11 23:38:38,053:INFO:Importing untrained model
2021-07-11 23:38:38,058:INFO:Declaring custom model
2021-07-11 23:38:38,150:INFO:Ridge Regression Imported succesfully
2021-07-11 23:38:38,311:INFO:Starting cross validation
2021-07-11 23:38:38,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:38:38,716:INFO:Calculating mean and std
2021-07-11 23:38:38,720:INFO:Creating metrics dataframe
2021-07-11 23:38:38,766:INFO:Finalizing model
2021-07-11 23:38:38,807:INFO:Uploading results into container
2021-07-11 23:38:38,810:INFO:Uploading model into container now
2021-07-11 23:38:38,811:INFO:create_model_container: 22
2021-07-11 23:38:38,812:INFO:master_model_container: 22
2021-07-11 23:38:38,816:INFO:display_container: 6
2021-07-11 23:38:38,819:INFO:PowerTransformedTargetRegressor(alpha=7.73, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=7.73, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-07-11 23:38:38,821:INFO:create_model() succesfully completed......................................
2021-07-11 23:38:38,953:INFO:SubProcess create_model() end ==================================
2021-07-11 23:38:38,985:INFO:create_model_container: 22
2021-07-11 23:38:38,987:INFO:master_model_container: 22
2021-07-11 23:38:38,990:INFO:display_container: 6
2021-07-11 23:38:38,994:INFO:PowerTransformedTargetRegressor(alpha=7.73, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=7.73, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-07-11 23:38:38,996:INFO:tune_model() succesfully completed......................................
2021-07-11 23:38:39,130:INFO:Initializing tune_model()
2021-07-11 23:38:39,132:INFO:tune_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-07-11 23:38:39,134:INFO:Checking exceptions
2021-07-11 23:38:39,135:INFO:Preparing display monitor
2021-07-11 23:38:39,186:INFO:Copying training dataset
2021-07-11 23:38:39,189:INFO:Checking base model
2021-07-11 23:38:39,192:INFO:Base model : Gradient Boosting Regressor
2021-07-11 23:38:39,230:INFO:Declaring metric variables
2021-07-11 23:38:39,270:INFO:Defining Hyperparameters
2021-07-11 23:38:39,404:INFO:Tuning with n_jobs=-1
2021-07-11 23:38:39,406:INFO:Initializing RandomizedSearchCV
2021-07-11 23:39:09,667:INFO:best_params: {'actual_estimator__subsample': 0.85, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.15}
2021-07-11 23:39:09,669:INFO:Hyperparameter search completed
2021-07-11 23:39:09,670:INFO:SubProcess create_model() called ==================================
2021-07-11 23:39:09,675:INFO:Initializing create_model()
2021-07-11 23:39:09,676:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD6707F40>, kwargs={'subsample': 0.85, 'n_estimators': 230, 'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 7, 'learning_rate': 0.15})
2021-07-11 23:39:09,678:INFO:Checking exceptions
2021-07-11 23:39:09,679:INFO:Importing libraries
2021-07-11 23:39:09,681:INFO:Copying training dataset
2021-07-11 23:39:09,684:INFO:Defining folds
2021-07-11 23:39:09,685:INFO:Declaring metric variables
2021-07-11 23:39:09,708:INFO:Importing untrained model
2021-07-11 23:39:09,709:INFO:Declaring custom model
2021-07-11 23:39:09,735:INFO:Gradient Boosting Regressor Imported succesfully
2021-07-11 23:39:09,782:INFO:Starting cross validation
2021-07-11 23:39:09,784:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:39:20,657:INFO:Calculating mean and std
2021-07-11 23:39:20,663:INFO:Creating metrics dataframe
2021-07-11 23:39:20,733:INFO:Finalizing model
2021-07-11 23:39:27,354:INFO:Uploading results into container
2021-07-11 23:39:27,356:INFO:Uploading model into container now
2021-07-11 23:39:27,358:INFO:create_model_container: 23
2021-07-11 23:39:27,358:INFO:master_model_container: 23
2021-07-11 23:39:27,360:INFO:display_container: 7
2021-07-11 23:39:27,363:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.15, loss='ls', max_depth=7,
                                max_features=1.0, max_leaf_nodes=None,
                                min_impurity_decrease=0.02,
                                min_impurity_split=None, min_samples_leaf=5,
                                min_samples_split=5,
                                min_weight_fraction_leaf=0.0, n_estimators=230,
                                n_iter_no_change=None,
                                power_transformer_metho...
                                                                    min_impurity_decrease=0.02,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=5,
                                                                    min_samples_split=5,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=230,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-07-11 23:39:27,370:INFO:create_model() succesfully completed......................................
2021-07-11 23:39:27,487:INFO:SubProcess create_model() end ==================================
2021-07-11 23:39:27,515:INFO:create_model_container: 23
2021-07-11 23:39:27,517:INFO:master_model_container: 23
2021-07-11 23:39:27,518:INFO:display_container: 7
2021-07-11 23:39:27,525:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.15, loss='ls', max_depth=7,
                                max_features=1.0, max_leaf_nodes=None,
                                min_impurity_decrease=0.02,
                                min_impurity_split=None, min_samples_leaf=5,
                                min_samples_split=5,
                                min_weight_fraction_leaf=0.0, n_estimators=230,
                                n_iter_no_change=None,
                                power_transformer_metho...
                                                                    min_impurity_decrease=0.02,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=5,
                                                                    min_samples_split=5,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=230,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-07-11 23:39:27,526:INFO:tune_model() succesfully completed......................................
2021-07-11 23:39:27,644:INFO:Initializing ensemble_model()
2021-07-11 23:39:27,647:INFO:ensemble_model(estimator=PowerTransformedTargetRegressor(alpha=0.01, epsilon=1.1, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.01,
                                                         epsilon=1.1,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, verbose=True, display=None)
2021-07-11 23:39:27,650:INFO:Checking exceptions
2021-07-11 23:39:27,651:INFO:Preparing display monitor
2021-07-11 23:39:27,693:INFO:Importing libraries
2021-07-11 23:39:27,695:INFO:Copying training dataset
2021-07-11 23:39:27,699:INFO:Checking base model
2021-07-11 23:39:27,701:INFO:Base model : Huber Regressor
2021-07-11 23:39:27,753:INFO:Importing untrained ensembler
2021-07-11 23:39:27,754:INFO:Ensemble method set to Bagging
2021-07-11 23:39:27,756:INFO:SubProcess create_model() called ==================================
2021-07-11 23:39:27,760:INFO:Initializing create_model()
2021-07-11 23:39:27,763:INFO:create_model(estimator=BaggingRegressor(base_estimator=HuberRegressor(alpha=0.01, epsilon=1.1,
                                               fit_intercept=True, max_iter=100,
                                               tol=1e-05, warm_start=False),
                 bootstrap=True, bootstrap_features=False, max_features=1.0,
                 max_samples=1.0, n_estimators=10, n_jobs=None, oob_score=False,
                 random_state=123, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD60B8AF0>, kwargs={})
2021-07-11 23:39:27,765:INFO:Checking exceptions
2021-07-11 23:39:27,767:INFO:Importing libraries
2021-07-11 23:39:27,768:INFO:Copying training dataset
2021-07-11 23:39:27,772:INFO:Defining folds
2021-07-11 23:39:27,774:INFO:Declaring metric variables
2021-07-11 23:39:27,802:INFO:Importing untrained model
2021-07-11 23:39:27,803:INFO:Declaring custom model
2021-07-11 23:39:27,838:INFO:Huber Regressor Imported succesfully
2021-07-11 23:39:27,902:INFO:Starting cross validation
2021-07-11 23:39:27,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:39:47,950:INFO:Calculating mean and std
2021-07-11 23:39:47,953:INFO:Creating metrics dataframe
2021-07-11 23:39:47,979:INFO:Finalizing model
2021-07-11 23:39:56,683:INFO:Uploading results into container
2021-07-11 23:39:56,687:INFO:Uploading model into container now
2021-07-11 23:39:56,689:INFO:create_model_container: 24
2021-07-11 23:39:56,692:INFO:master_model_container: 24
2021-07-11 23:39:56,697:INFO:display_container: 8
2021-07-11 23:39:56,712:INFO:PowerTransformedTargetRegressor(base_estimator=HuberRegressor(alpha=0.01,
                                                              epsilon=1.1,
                                                              fit_intercept=True,
                                                              max_iter=100,
                                                              tol=1e-05,
                                                              warm_start=False),
                                bootstrap=True, bootstrap_features=False,
                                max_features=1.0, max_samples=1.0,
                                n_estimators=10, n_jobs=None, oob_score=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=BaggingRegressor(base_estimator=HuberRegressor(alpha=0.01,
                                                                                         epsilon=1.1,
                                                                                         fit_intercept=True,
                                                                                         max_iter=100,
                                                                                         tol=1e-05,
                                                                                         warm_start=False),
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:39:56,715:INFO:create_model() succesfully completed......................................
2021-07-11 23:39:56,943:INFO:SubProcess create_model() end ==================================
2021-07-11 23:39:56,992:INFO:create_model_container: 24
2021-07-11 23:39:56,993:INFO:master_model_container: 24
2021-07-11 23:39:56,995:INFO:display_container: 8
2021-07-11 23:39:57,010:INFO:PowerTransformedTargetRegressor(base_estimator=HuberRegressor(alpha=0.01,
                                                              epsilon=1.1,
                                                              fit_intercept=True,
                                                              max_iter=100,
                                                              tol=1e-05,
                                                              warm_start=False),
                                bootstrap=True, bootstrap_features=False,
                                max_features=1.0, max_samples=1.0,
                                n_estimators=10, n_jobs=None, oob_score=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=BaggingRegressor(base_estimator=HuberRegressor(alpha=0.01,
                                                                                         epsilon=1.1,
                                                                                         fit_intercept=True,
                                                                                         max_iter=100,
                                                                                         tol=1e-05,
                                                                                         warm_start=False),
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:39:57,013:INFO:ensemble_model() succesfully completed......................................
2021-07-11 23:39:57,199:INFO:Initializing ensemble_model()
2021-07-11 23:39:57,203:INFO:ensemble_model(estimator=PowerTransformedTargetRegressor(alpha_1=0.3, alpha_2=1e-06, alpha_init=None,
                                compute_score=True, copy_X=True,
                                fit_intercept=True, lambda_1=0.01,
                                lambda_2=1e-07, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=0.3,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=True,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=0.01,
                                                        lambda_2=1e-07,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, verbose=True, display=None)
2021-07-11 23:39:57,206:INFO:Checking exceptions
2021-07-11 23:39:57,209:INFO:Preparing display monitor
2021-07-11 23:39:57,303:INFO:Importing libraries
2021-07-11 23:39:57,306:INFO:Copying training dataset
2021-07-11 23:39:57,312:INFO:Checking base model
2021-07-11 23:39:57,321:INFO:Base model : Bayesian Ridge
2021-07-11 23:39:57,438:INFO:Importing untrained ensembler
2021-07-11 23:39:57,440:INFO:Ensemble method set to Bagging
2021-07-11 23:39:57,446:INFO:SubProcess create_model() called ==================================
2021-07-11 23:39:57,454:INFO:Initializing create_model()
2021-07-11 23:39:57,459:INFO:create_model(estimator=BaggingRegressor(base_estimator=BayesianRidge(alpha_1=0.3, alpha_2=1e-06,
                                              alpha_init=None,
                                              compute_score=True, copy_X=True,
                                              fit_intercept=True, lambda_1=0.01,
                                              lambda_2=1e-07, lambda_init=None,
                                              n_iter=300, normalize=False,
                                              tol=0.001, verbose=False),
                 bootstrap=True, bootstrap_features=False, max_features=1.0,
                 max_samples=1.0, n_estimators=10, n_jobs=None, oob_score=False,
                 random_state=123, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD6727160>, kwargs={})
2021-07-11 23:39:57,462:INFO:Checking exceptions
2021-07-11 23:39:57,465:INFO:Importing libraries
2021-07-11 23:39:57,468:INFO:Copying training dataset
2021-07-11 23:39:57,475:INFO:Defining folds
2021-07-11 23:39:57,478:INFO:Declaring metric variables
2021-07-11 23:39:57,539:INFO:Importing untrained model
2021-07-11 23:39:57,542:INFO:Declaring custom model
2021-07-11 23:39:57,610:INFO:Bayesian Ridge Imported succesfully
2021-07-11 23:39:57,731:INFO:Starting cross validation
2021-07-11 23:39:57,736:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:40:05,876:INFO:Calculating mean and std
2021-07-11 23:40:05,880:INFO:Creating metrics dataframe
2021-07-11 23:40:05,925:INFO:Finalizing model
2021-07-11 23:40:13,236:INFO:Uploading results into container
2021-07-11 23:40:13,239:INFO:Uploading model into container now
2021-07-11 23:40:13,244:INFO:create_model_container: 25
2021-07-11 23:40:13,246:INFO:master_model_container: 25
2021-07-11 23:40:13,251:INFO:display_container: 9
2021-07-11 23:40:13,268:INFO:PowerTransformedTargetRegressor(base_estimator=BayesianRidge(alpha_1=0.3,
                                                             alpha_2=1e-06,
                                                             alpha_init=None,
                                                             compute_score=True,
                                                             copy_X=True,
                                                             fit_intercept=True,
                                                             lambda_1=0.01,
                                                             lambda_2=1e-07,
                                                             lambda_init=None,
                                                             n_iter=300,
                                                             normalize=False,
                                                             tol=0.001,
                                                             verbose=False),
                                bootstrap=True, bootstrap_features=False,
                                max_features=1.0, max_samples=1.0,
                                n_estimators=10, n_jobs=Non...
                                                                                        alpha_init=None,
                                                                                        compute_score=True,
                                                                                        copy_X=True,
                                                                                        fit_intercept=True,
                                                                                        lambda_1=0.01,
                                                                                        lambda_2=1e-07,
                                                                                        lambda_init=None,
                                                                                        n_iter=300,
                                                                                        normalize=False,
                                                                                        tol=0.001,
                                                                                        verbose=False),
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:40:13,276:INFO:create_model() succesfully completed......................................
2021-07-11 23:40:13,538:INFO:SubProcess create_model() end ==================================
2021-07-11 23:40:13,628:INFO:create_model_container: 25
2021-07-11 23:40:13,633:INFO:master_model_container: 25
2021-07-11 23:40:13,640:INFO:display_container: 9
2021-07-11 23:40:13,668:INFO:PowerTransformedTargetRegressor(base_estimator=BayesianRidge(alpha_1=0.3,
                                                             alpha_2=1e-06,
                                                             alpha_init=None,
                                                             compute_score=True,
                                                             copy_X=True,
                                                             fit_intercept=True,
                                                             lambda_1=0.01,
                                                             lambda_2=1e-07,
                                                             lambda_init=None,
                                                             n_iter=300,
                                                             normalize=False,
                                                             tol=0.001,
                                                             verbose=False),
                                bootstrap=True, bootstrap_features=False,
                                max_features=1.0, max_samples=1.0,
                                n_estimators=10, n_jobs=Non...
                                                                                        alpha_init=None,
                                                                                        compute_score=True,
                                                                                        copy_X=True,
                                                                                        fit_intercept=True,
                                                                                        lambda_1=0.01,
                                                                                        lambda_2=1e-07,
                                                                                        lambda_init=None,
                                                                                        n_iter=300,
                                                                                        normalize=False,
                                                                                        tol=0.001,
                                                                                        verbose=False),
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:40:13,672:INFO:ensemble_model() succesfully completed......................................
2021-07-11 23:40:13,920:INFO:Initializing ensemble_model()
2021-07-11 23:40:13,925:INFO:ensemble_model(estimator=PowerTransformedTargetRegressor(border_count=254, depth=8, eta=0.4,
                                l2_leaf_reg=30, loss_function='RMSE',
                                n_estimators=180,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.2,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD80E3CA0>,
                                task_type='CPU', verbose=False), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, verbose=True, display=None)
2021-07-11 23:40:13,931:INFO:Checking exceptions
2021-07-11 23:40:13,935:INFO:Preparing display monitor
2021-07-11 23:40:14,067:INFO:Importing libraries
2021-07-11 23:40:14,070:INFO:Copying training dataset
2021-07-11 23:40:14,079:INFO:Checking base model
2021-07-11 23:40:14,083:INFO:Base model : CatBoost Regressor
2021-07-11 23:40:14,222:INFO:Importing untrained ensembler
2021-07-11 23:40:14,225:INFO:Ensemble method set to Bagging
2021-07-11 23:40:14,230:INFO:SubProcess create_model() called ==================================
2021-07-11 23:40:14,237:INFO:Initializing create_model()
2021-07-11 23:40:14,241:INFO:create_model(estimator=BaggingRegressor(base_estimator=<catboost.core.CatBoostRegressor object at 0x000001DDD80DFEB0>,
                 bootstrap=True, bootstrap_features=False, max_features=1.0,
                 max_samples=1.0, n_estimators=10, n_jobs=None, oob_score=False,
                 random_state=123, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD78C4BE0>, kwargs={})
2021-07-11 23:40:14,247:INFO:Checking exceptions
2021-07-11 23:40:14,250:INFO:Importing libraries
2021-07-11 23:40:14,255:INFO:Copying training dataset
2021-07-11 23:40:14,265:INFO:Defining folds
2021-07-11 23:40:14,268:INFO:Declaring metric variables
2021-07-11 23:40:14,335:INFO:Importing untrained model
2021-07-11 23:40:14,339:INFO:Declaring custom model
2021-07-11 23:40:14,404:INFO:CatBoost Regressor Imported succesfully
2021-07-11 23:40:14,519:INFO:Starting cross validation
2021-07-11 23:40:14,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:46:37,365:INFO:Calculating mean and std
2021-07-11 23:46:37,372:INFO:Creating metrics dataframe
2021-07-11 23:46:37,433:INFO:Finalizing model
2021-07-11 23:47:24,973:INFO:Uploading results into container
2021-07-11 23:47:24,975:INFO:Uploading model into container now
2021-07-11 23:47:24,975:INFO:create_model_container: 26
2021-07-11 23:47:24,975:INFO:master_model_container: 26
2021-07-11 23:47:24,975:INFO:display_container: 10
2021-07-11 23:47:24,989:INFO:PowerTransformedTargetRegressor(base_estimator=<catboost.core.CatBoostRegressor object at 0x000001DDD81184F0>,
                                bootstrap=True, bootstrap_features=False,
                                max_features=1.0, max_samples=1.0,
                                n_estimators=10, n_jobs=None, oob_score=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=BaggingRegressor(base_estimator=<catboost.core.CatBoostRegressor object at 0x000001DDD81184F0>,
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:47:24,992:INFO:create_model() succesfully completed......................................
2021-07-11 23:47:25,136:INFO:SubProcess create_model() end ==================================
2021-07-11 23:47:25,186:INFO:create_model_container: 26
2021-07-11 23:47:25,186:INFO:master_model_container: 26
2021-07-11 23:47:25,186:INFO:display_container: 10
2021-07-11 23:47:25,202:INFO:PowerTransformedTargetRegressor(base_estimator=<catboost.core.CatBoostRegressor object at 0x000001DDD81184F0>,
                                bootstrap=True, bootstrap_features=False,
                                max_features=1.0, max_samples=1.0,
                                n_estimators=10, n_jobs=None, oob_score=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=BaggingRegressor(base_estimator=<catboost.core.CatBoostRegressor object at 0x000001DDD81184F0>,
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:47:25,203:INFO:ensemble_model() succesfully completed......................................
2021-07-11 23:47:25,335:INFO:Initializing ensemble_model()
2021-07-11 23:47:25,335:INFO:ensemble_model(estimator=PowerTransformedTargetRegressor(alpha=7.73, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=7.73, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, verbose=True, display=None)
2021-07-11 23:47:25,335:INFO:Checking exceptions
2021-07-11 23:47:25,343:INFO:Preparing display monitor
2021-07-11 23:47:25,401:INFO:Importing libraries
2021-07-11 23:47:25,401:INFO:Copying training dataset
2021-07-11 23:47:25,401:INFO:Checking base model
2021-07-11 23:47:25,417:INFO:Base model : Ridge Regression
2021-07-11 23:47:25,484:INFO:Importing untrained ensembler
2021-07-11 23:47:25,484:INFO:Ensemble method set to Bagging
2021-07-11 23:47:25,484:INFO:SubProcess create_model() called ==================================
2021-07-11 23:47:25,484:INFO:Initializing create_model()
2021-07-11 23:47:25,484:INFO:create_model(estimator=BaggingRegressor(base_estimator=Ridge(alpha=7.73, copy_X=True,
                                      fit_intercept=True, max_iter=None,
                                      normalize=False, random_state=123,
                                      solver='auto', tol=0.001),
                 bootstrap=True, bootstrap_features=False, max_features=1.0,
                 max_samples=1.0, n_estimators=10, n_jobs=None, oob_score=False,
                 random_state=123, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD6772340>, kwargs={})
2021-07-11 23:47:25,499:INFO:Checking exceptions
2021-07-11 23:47:25,501:INFO:Importing libraries
2021-07-11 23:47:25,506:INFO:Copying training dataset
2021-07-11 23:47:25,511:INFO:Defining folds
2021-07-11 23:47:25,511:INFO:Declaring metric variables
2021-07-11 23:47:25,551:INFO:Importing untrained model
2021-07-11 23:47:25,551:INFO:Declaring custom model
2021-07-11 23:47:25,584:INFO:Ridge Regression Imported succesfully
2021-07-11 23:47:25,652:INFO:Starting cross validation
2021-07-11 23:47:25,652:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:47:26,996:INFO:Calculating mean and std
2021-07-11 23:47:27,002:INFO:Creating metrics dataframe
2021-07-11 23:47:27,057:INFO:Finalizing model
2021-07-11 23:47:27,399:INFO:Uploading results into container
2021-07-11 23:47:27,402:INFO:Uploading model into container now
2021-07-11 23:47:27,402:INFO:create_model_container: 27
2021-07-11 23:47:27,402:INFO:master_model_container: 27
2021-07-11 23:47:27,402:INFO:display_container: 11
2021-07-11 23:47:27,421:INFO:PowerTransformedTargetRegressor(base_estimator=Ridge(alpha=7.73, copy_X=True,
                                                     fit_intercept=True,
                                                     max_iter=None,
                                                     normalize=False,
                                                     random_state=123,
                                                     solver='auto', tol=0.001),
                                bootstrap=True, bootstrap_features=False,
                                max_features=1.0, max_samples=1.0,
                                n_estimators=10, n_jobs=None, oob_score=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=T...
                                regressor=BaggingRegressor(base_estimator=Ridge(alpha=7.73,
                                                                                copy_X=True,
                                                                                fit_intercept=True,
                                                                                max_iter=None,
                                                                                normalize=False,
                                                                                random_state=123,
                                                                                solver='auto',
                                                                                tol=0.001),
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:47:27,421:INFO:create_model() succesfully completed......................................
2021-07-11 23:47:27,564:INFO:SubProcess create_model() end ==================================
2021-07-11 23:47:27,602:INFO:create_model_container: 27
2021-07-11 23:47:27,602:INFO:master_model_container: 27
2021-07-11 23:47:27,602:INFO:display_container: 11
2021-07-11 23:47:27,621:INFO:PowerTransformedTargetRegressor(base_estimator=Ridge(alpha=7.73, copy_X=True,
                                                     fit_intercept=True,
                                                     max_iter=None,
                                                     normalize=False,
                                                     random_state=123,
                                                     solver='auto', tol=0.001),
                                bootstrap=True, bootstrap_features=False,
                                max_features=1.0, max_samples=1.0,
                                n_estimators=10, n_jobs=None, oob_score=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=T...
                                regressor=BaggingRegressor(base_estimator=Ridge(alpha=7.73,
                                                                                copy_X=True,
                                                                                fit_intercept=True,
                                                                                max_iter=None,
                                                                                normalize=False,
                                                                                random_state=123,
                                                                                solver='auto',
                                                                                tol=0.001),
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:47:27,621:INFO:ensemble_model() succesfully completed......................................
2021-07-11 23:47:27,767:INFO:Initializing ensemble_model()
2021-07-11 23:47:27,769:INFO:ensemble_model(estimator=PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.15, loss='ls', max_depth=7,
                                max_features=1.0, max_leaf_nodes=None,
                                min_impurity_decrease=0.02,
                                min_impurity_split=None, min_samples_leaf=5,
                                min_samples_split=5,
                                min_weight_fraction_leaf=0.0, n_estimators=230,
                                n_iter_no_change=None,
                                power_transformer_metho...
                                                                    min_impurity_decrease=0.02,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=5,
                                                                    min_samples_split=5,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=230,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=0.85,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=0.85, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, verbose=True, display=None)
2021-07-11 23:47:27,770:INFO:Checking exceptions
2021-07-11 23:47:27,770:INFO:Preparing display monitor
2021-07-11 23:47:27,834:INFO:Importing libraries
2021-07-11 23:47:27,834:INFO:Copying training dataset
2021-07-11 23:47:27,834:INFO:Checking base model
2021-07-11 23:47:27,834:INFO:Base model : Gradient Boosting Regressor
2021-07-11 23:47:27,908:INFO:Importing untrained ensembler
2021-07-11 23:47:27,908:INFO:Ensemble method set to Bagging
2021-07-11 23:47:27,908:INFO:SubProcess create_model() called ==================================
2021-07-11 23:47:27,927:INFO:Initializing create_model()
2021-07-11 23:47:27,927:INFO:create_model(estimator=BaggingRegressor(base_estimator=GradientBoostingRegressor(alpha=0.9,
                                                          ccp_alpha=0.0,
                                                          criterion='friedman_mse',
                                                          init=None,
                                                          learning_rate=0.15,
                                                          loss='ls',
                                                          max_depth=7,
                                                          max_features=1.0,
                                                          max_leaf_nodes=None,
                                                          min_impurity_decrease=0.02,
                                                          min_impurity_split=None,
                                                          min_samples_leaf=5,
                                                          min_samples_split=5,
                                                          min_weight_fraction_leaf=0.0,
                                                          n_estimators=230,
                                                          n_iter_no_change=None,
                                                          presort='deprecated',
                                                          random_state=123,
                                                          subsample=0.85,
                                                          tol=0.0001,
                                                          validation_fraction=0.1,
                                                          verbose=0,
                                                          warm_start=False),
                 bootstrap=True, bootstrap_features=False, max_features=1.0,
                 max_samples=1.0, n_estimators=10, n_jobs=None, oob_score=False,
                 random_state=123, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDD78C4BE0>, kwargs={})
2021-07-11 23:47:27,927:INFO:Checking exceptions
2021-07-11 23:47:27,927:INFO:Importing libraries
2021-07-11 23:47:27,927:INFO:Copying training dataset
2021-07-11 23:47:27,944:INFO:Defining folds
2021-07-11 23:47:27,946:INFO:Declaring metric variables
2021-07-11 23:47:27,986:INFO:Importing untrained model
2021-07-11 23:47:27,986:INFO:Declaring custom model
2021-07-11 23:47:28,027:INFO:Gradient Boosting Regressor Imported succesfully
2021-07-11 23:47:28,105:INFO:Starting cross validation
2021-07-11 23:47:28,105:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:48:33,585:INFO:Calculating mean and std
2021-07-11 23:48:33,589:INFO:Creating metrics dataframe
2021-07-11 23:48:33,641:INFO:Finalizing model
2021-07-11 23:48:56,296:INFO:Uploading results into container
2021-07-11 23:48:56,299:INFO:Uploading model into container now
2021-07-11 23:48:56,300:INFO:create_model_container: 28
2021-07-11 23:48:56,300:INFO:master_model_container: 28
2021-07-11 23:48:56,301:INFO:display_container: 12
2021-07-11 23:48:56,304:INFO:PowerTransformedTargetRegressor(base_estimator=GradientBoostingRegressor(alpha=0.9,
                                                                         ccp_alpha=0.0,
                                                                         criterion='friedman_mse',
                                                                         init=None,
                                                                         learning_rate=0.15,
                                                                         loss='ls',
                                                                         max_depth=7,
                                                                         max_features=1.0,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.02,
                                                                         min_impurity_split=None,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=5,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         n_estimators=230,
                                                                         n_it...
                                                                                                    min_weight_fraction_leaf=0.0,
                                                                                                    n_estimators=230,
                                                                                                    n_iter_no_change=None,
                                                                                                    presort='deprecated',
                                                                                                    random_state=123,
                                                                                                    subsample=0.85,
                                                                                                    tol=0.0001,
                                                                                                    validation_fraction=0.1,
                                                                                                    verbose=0,
                                                                                                    warm_start=False),
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:48:56,308:INFO:create_model() succesfully completed......................................
2021-07-11 23:48:56,392:INFO:SubProcess create_model() end ==================================
2021-07-11 23:48:56,412:INFO:create_model_container: 28
2021-07-11 23:48:56,412:INFO:master_model_container: 28
2021-07-11 23:48:56,413:INFO:display_container: 12
2021-07-11 23:48:56,415:INFO:PowerTransformedTargetRegressor(base_estimator=GradientBoostingRegressor(alpha=0.9,
                                                                         ccp_alpha=0.0,
                                                                         criterion='friedman_mse',
                                                                         init=None,
                                                                         learning_rate=0.15,
                                                                         loss='ls',
                                                                         max_depth=7,
                                                                         max_features=1.0,
                                                                         max_leaf_nodes=None,
                                                                         min_impurity_decrease=0.02,
                                                                         min_impurity_split=None,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=5,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         n_estimators=230,
                                                                         n_it...
                                                                                                    min_weight_fraction_leaf=0.0,
                                                                                                    n_estimators=230,
                                                                                                    n_iter_no_change=None,
                                                                                                    presort='deprecated',
                                                                                                    random_state=123,
                                                                                                    subsample=0.85,
                                                                                                    tol=0.0001,
                                                                                                    validation_fraction=0.1,
                                                                                                    verbose=0,
                                                                                                    warm_start=False),
                                                           bootstrap=True,
                                                           bootstrap_features=False,
                                                           max_features=1.0,
                                                           max_samples=1.0,
                                                           n_estimators=10,
                                                           n_jobs=None,
                                                           oob_score=False,
                                                           random_state=123,
                                                           verbose=0,
                                                           warm_start=False),
                                verbose=0, warm_start=False)
2021-07-11 23:48:56,424:INFO:ensemble_model() succesfully completed......................................
2021-07-11 23:48:56,515:INFO:Initializing blend_models()
2021-07-11 23:48:56,527:INFO:blend_models(estimator_list=[PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False), PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False), PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x000001DDD825E1C0>,
                                task_type='CPU', verbose=False), PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001), PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)], fold=None, round=4, choose_better=False, optimize=R2, method=auto, weights=None, fit_kwargs=None, groups=None, verbose=True, display=None)
2021-07-11 23:48:56,530:INFO:Checking exceptions
2021-07-11 23:48:56,530:INFO:Preparing display monitor
2021-07-11 23:48:56,553:INFO:Importing libraries
2021-07-11 23:48:56,554:INFO:Copying training dataset
2021-07-11 23:48:56,570:INFO:Getting model names
2021-07-11 23:48:56,584:INFO:SubProcess create_model() called ==================================
2021-07-11 23:48:56,591:INFO:Initializing create_model()
2021-07-11 23:48:56,593:INFO:create_model(estimator=VotingRegressor(estimators=[('huber',
                             HuberRegressor(alpha=0.0001, epsilon=1.35,
                                            fit_intercept=True, max_iter=100,
                                            tol=1e-05, warm_start=False)),
                            ('br',
                             BayesianRidge(alpha_1=1e-06, alpha_2=1e-06,
                                           alpha_init=None, compute_score=False,
                                           copy_X=True, fit_intercept=True,
                                           lambda_1=1e-06, lambda_2=1e-06,
                                           lambda_init=None, n_iter=300,
                                           normalize=False, tol=0.001,
                                           verbose=Fals...
                                                       loss='ls', max_depth=3,
                                                       max_features=None,
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.0,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=2,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=100,
                                                       n_iter_no_change=None,
                                                       presort='deprecated',
                                                       random_state=123,
                                                       subsample=1.0,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False))],
                n_jobs=-1, verbose=False, weights=None), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001DDC04BBFA0>, kwargs={})
2021-07-11 23:48:56,594:INFO:Checking exceptions
2021-07-11 23:48:56,595:INFO:Importing libraries
2021-07-11 23:48:56,595:INFO:Copying training dataset
2021-07-11 23:48:56,597:INFO:Defining folds
2021-07-11 23:48:56,598:INFO:Declaring metric variables
2021-07-11 23:48:56,614:INFO:Importing untrained model
2021-07-11 23:48:56,615:INFO:Declaring custom model
2021-07-11 23:48:56,632:INFO:Voting Regressor Imported succesfully
2021-07-11 23:48:56,662:INFO:Starting cross validation
2021-07-11 23:48:56,663:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-07-11 23:50:11,501:INFO:Calculating mean and std
2021-07-11 23:50:11,511:INFO:Creating metrics dataframe
2021-07-11 23:50:11,594:INFO:Finalizing model
2021-07-11 23:50:25,879:INFO:Uploading results into container
2021-07-11 23:50:25,884:INFO:Uploading model into container now
2021-07-11 23:50:25,888:INFO:create_model_container: 29
2021-07-11 23:50:25,893:INFO:master_model_container: 29
2021-07-11 23:50:25,896:INFO:display_container: 13
2021-07-11 23:50:26,000:INFO:PowerTransformedTargetRegressor(estimators=[('huber',
                                             HuberRegressor(alpha=0.0001,
                                                            epsilon=1.35,
                                                            fit_intercept=True,
                                                            max_iter=100,
                                                            tol=1e-05,
                                                            warm_start=False)),
                                            ('br',
                                             BayesianRidge(alpha_1=1e-06,
                                                           alpha_2=1e-06,
                                                           alpha_init=None,
                                                           compute_score=False,
                                                           copy_X=True,
                                                           fit_intercept=True,
                                                           lambda_1=1e-06,
                                                           lambda_2=1e-06,
                                                           lambda_init=None,
                                                           n_iter=300,
                                                           normalize=False,
                                                           tol=0....
                                                                                                 max_leaf_nodes=None,
                                                                                                 min_impurity_decrease=0.0,
                                                                                                 min_impurity_split=None,
                                                                                                 min_samples_leaf=1,
                                                                                                 min_samples_split=2,
                                                                                                 min_weight_fraction_leaf=0.0,
                                                                                                 n_estimators=100,
                                                                                                 n_iter_no_change=None,
                                                                                                 presort='deprecated',
                                                                                                 random_state=123,
                                                                                                 subsample=1.0,
                                                                                                 tol=0.0001,
                                                                                                 validation_fraction=0.1,
                                                                                                 verbose=0,
                                                                                                 warm_start=False))],
                                                          n_jobs=-1,
                                                          verbose=False,
                                                          weights=None),
                                verbose=False, weights=None)
2021-07-11 23:50:26,004:INFO:create_model() succesfully completed......................................
2021-07-11 23:50:26,236:INFO:SubProcess create_model() end ==================================
2021-07-11 23:50:26,300:INFO:create_model_container: 29
2021-07-11 23:50:26,304:INFO:master_model_container: 29
2021-07-11 23:50:26,307:INFO:display_container: 13
2021-07-11 23:50:26,411:INFO:PowerTransformedTargetRegressor(estimators=[('huber',
                                             HuberRegressor(alpha=0.0001,
                                                            epsilon=1.35,
                                                            fit_intercept=True,
                                                            max_iter=100,
                                                            tol=1e-05,
                                                            warm_start=False)),
                                            ('br',
                                             BayesianRidge(alpha_1=1e-06,
                                                           alpha_2=1e-06,
                                                           alpha_init=None,
                                                           compute_score=False,
                                                           copy_X=True,
                                                           fit_intercept=True,
                                                           lambda_1=1e-06,
                                                           lambda_2=1e-06,
                                                           lambda_init=None,
                                                           n_iter=300,
                                                           normalize=False,
                                                           tol=0....
                                                                                                 max_leaf_nodes=None,
                                                                                                 min_impurity_decrease=0.0,
                                                                                                 min_impurity_split=None,
                                                                                                 min_samples_leaf=1,
                                                                                                 min_samples_split=2,
                                                                                                 min_weight_fraction_leaf=0.0,
                                                                                                 n_estimators=100,
                                                                                                 n_iter_no_change=None,
                                                                                                 presort='deprecated',
                                                                                                 random_state=123,
                                                                                                 subsample=1.0,
                                                                                                 tol=0.0001,
                                                                                                 validation_fraction=0.1,
                                                                                                 verbose=0,
                                                                                                 warm_start=False))],
                                                          n_jobs=-1,
                                                          verbose=False,
                                                          weights=None),
                                verbose=False, weights=None)
2021-07-11 23:50:26,416:INFO:blend_models() succesfully completed......................................
2021-07-11 23:50:26,587:INFO:Initializing automl()
2021-07-11 23:50:26,590:INFO:automl(optimize=Recall, use_holdout=False)
2021-07-15 21:18:10,941:INFO:Initializing load_model()
2021-07-15 21:18:10,947:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2021-07-15 21:52:59,849:INFO:Initializing load_model()
2021-07-15 21:52:59,851:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2021-07-15 21:53:07,064:INFO:Initializing load_model()
2021-07-15 21:53:07,067:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2021-07-15 21:53:25,555:INFO:Initializing load_model()
2021-07-15 21:53:25,557:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2021-07-15 21:56:57,150:INFO:Initializing load_model()
2021-07-15 21:56:57,154:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2021-07-15 22:04:43,857:INFO:Initializing load_model()
2021-07-15 22:04:43,860:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2021-07-15 22:14:04,763:INFO:Initializing load_model()
2021-07-15 22:14:04,765:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2021-07-15 22:16:57,697:INFO:Initializing load_model()
2021-07-15 22:16:57,700:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
2021-07-15 22:23:03,806:INFO:Initializing load_model()
2021-07-15 22:23:03,811:INFO:load_model(model_name=model, platform=None, authentication=None, verbose=True)
